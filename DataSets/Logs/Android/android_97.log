12-17 19:31:56.522  1795  2377 I IO.IOStatsService: onReceive:screen off
12-17 19:31:56.522   606  2379 E libteec : QSEECom_send_cmd return!
12-17 19:31:56.522   606  2379 E libteec : qsc_send_cmd finish
12-17 19:31:56.522   606  2379 E libteec : send data return = 128
12-17 19:31:56.523   835  2385 E libteec : receive data len = 128
12-17 19:31:56.523   835  2385 E libteec : begin
12-17 19:31:56.523   835  2385 E libteec : qsc_decode end
12-17 19:31:56.523   835  2385 I fpc_tac : fpc_tac_begin_identify---need_liveness_authentication: 0
12-17 19:31:56.523   835  2385 E libteec : begin
12-17 19:31:56.523   606  2379 E libteec : receive data len = 192
12-17 19:31:56.527  1795  2377 I IO.IOStatsService: saveIOStatsAndLatestUids,the time interval is too shorter than the last screen off
12-17 19:31:56.527   606  2379 E libteec : QSEECom_send_cmd return!
12-17 19:31:56.527   606  2379 E libteec : qsc_send_cmd finish
12-17 19:31:56.527   606  2379 E libteec : send data return = 192
12-17 19:31:56.527   835  2385 E libteec : receive data len = 192
12-17 19:31:56.527   835  2385 E libteec : begin
12-17 19:31:56.527   835  2385 E libteec : qsc_decode end
12-17 19:31:56.527   835  2385 I fpc_tac : fpc_tac_send_set_arbitrary_data_cmd:ok, response:0
12-17 19:31:56.527   835  2385 D fingerprintd: onAcquired(2001)
12-17 19:31:56.527   835  2385 E libteec : begin
12-17 19:31:56.527  1795  3247 W FingerprintService: onAcquired 1
12-17 19:31:56.527   606  2379 E libteec : receive data len = 128
12-17 19:31:56.527  1795  2326 W FingerprintService: onAcquired 2
12-17 19:31:56.529  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.529  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.539  2883  2883 D HwKeyguardManagerImpl: isLockScreenDisabled HwKeyguardManagerImpl result = false
12-17 19:31:56.539  1795  3110 D PowerManagerService: acquire lock=184063844, flags=0x1, tag="NetworkStats", name=android, ws=null, uid=1000, pid=1795
12-17 19:31:56.540  1795  3110 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:31:56.540  1795  3110 D PowerManagerService: Acquiring suspend blocker "PowerManagerService.WakeLocks".
12-17 19:31:56.543  1795  3110 D NetdConnector: SND -> {11607 bandwidth gettetherstats}
12-17 19:31:56.544  1795  2665 D NetdConnector: RCV <- {200 11607 Tethering stats list completed}
12-17 19:31:56.544  2883  2883 I HwSystemManager: AntiMalManager:receive Broadcast ACTION_SCREEN_OFF mOnTimeSum:260909299 onTime:542180 isPowerConnected:false
12-17 19:31:56.545  1795  2665 D NetdConnector: RCV <- {200 11607 Tethering stats list completed}
12-17 19:31:56.545  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.545  2883  2883 I HwSystemManager: AutoCleanReceiveServer:receive action:android.intent.action.SCREEN_OFF
12-17 19:31:56.546  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.547  2883  2883 I HwSystemManager: AutoCleanReceiveServer:telemamanger state isIdle:true
12-17 19:31:56.547  2883  2883 I HwSystemManager: AutoCleanReceiveServer:checkToStartCleanService,phone is use state,phone is use,need not start clean service
12-17 19:31:56.549   606  2379 E libteec : QSEECom_send_cmd return!
12-17 19:31:56.549   606  2379 E libteec : qsc_send_cmd finish
12-17 19:31:56.549   835  2385 E libteec : receive data len = 128
12-17 19:31:56.549   835  2385 E libteec : begin
12-17 19:31:56.549   835  2385 E libteec : qsc_decode end
12-17 19:31:56.549   606  2379 E libteec : send data return = 128
12-17 19:31:56.549  1795  3110 W NetworkStatsFactory: mStatsXtProcUid: /proc/net/comm/stats does not exist!
12-17 19:31:56.549  1795  3110 D HwNetworkStatsService: mActiveIface: null
12-17 19:31:56.551  1795  3110 I SendBroadcastPermission: action:com.android.server.action.NETWORK_STATS_UPDATED, mPermissionType:0
12-17 19:31:56.551  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.552  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.552  1795  3110 I HwActivityManagerService: Split enqueueing broadcast [callerApp]:ProcessRecord{34bf34f 0:system/1000}
12-17 19:31:56.553  1795  3110 D PowerManagerService: release:lock=184063844, flg=0x0, tag="NetworkStats", name=android", ws=null, uid=1000, pid=1795
12-17 19:31:56.553  1795  3110 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:31:56.553  1795  3110 D PowerManagerService: Releasing suspend blocker "PowerManagerService.WakeLocks".
12-17 19:31:56.553  1795  3077 D GnssLocationProvider: receive broadcast intent, action: android.intent.action.SCREEN_OFF
12-17 19:31:56.553  1795  3077 I GnssLocationProvider: updateLowPowerMode,isPowerSaveMode:falseisInteractive:false
12-17 19:31:56.553  1795  3077 I GnssLocationProvider: disableGps:false  isEnabled()=true
12-17 19:31:56.556  2852  3361 I vol.VolumeDialogControl: C onScreenOff 
12-17 19:31:56.559  3168  3168 I CHR_TelStatusListenr0: [Timer rat:0 level:5] suspend
12-17 19:31:56.559  3168  3168 I CHR_TelStatusListenr0: [Timer serviceState:0 simReady:true] suspend
12-17 19:31:56.559  3168  3168 I CHR_TelStatusListenr1: [Timer serviceState:1 simReady:false] suspend
12-17 19:31:56.559  3168  3168 I CHR_TelphonyStatusService: duration: 515559 STATUS_REPORT_TIMESPAN: 86400000 / (1000 * 60 * 60 * 24) day STATUS_REPORT_TIMESPAN_FOR_BETA: 21600000 / (1000 * 60 * 60 * 24) day
12-17 19:31:56.559  3168  3168 I CHR_ChrUtil: is Beta User, userType = 3
12-17 19:31:56.563  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:31:56.563  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:31:56.564  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:31:56.565  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:31:56.565  2883  3040 I HwSystemManager: TrafficNotifyAfterLocked:mLockStartTraffic = 0;mLockStartTrafficList = {}
12-17 19:31:56.573  2883  2996 E HwSystemManager: SimCardMethod:/getSimCardInfo: imsi is null
12-17 19:31:56.576  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.576  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.583  2883  2996 I HwSystemManager: NormalTrafficAnalysis:alert byte = 0 last alert byte = 0
12-17 19:31:56.583  2883  2996 E HwSystemManager: NormalTrafficAnalysis:alert byte = 0, so return
12-17 19:31:56.587  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.587  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.591  3218  3236 E HW-JPEG-DEC: [HME_JPEG_DEC_Delete](3298): HME_JPEG_DEC_Delete: decoder_ctx=null
12-17 19:31:56.594  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.594  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.597  2883  2996 I HwSystemManager: TafficState:default sub id = 0slotIndex = 0 subscriptionId = 0
12-17 19:31:56.603  2883  2996 E HwSystemManager: LeisureTrafficSetting:result is empty
12-17 19:31:56.606  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.606  2883  2996 I HwSystemManager: NatTrafficNotifyService:delta byte = 0 no traffic delta = 0Traffic state is 301
12-17 19:31:56.606  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:56.612  2852  2852 I HwExpandableNotificationRowHelper: unclear notification ,notificationPkgName:com.android.incallui key:0|com.android.incallui|2|null|1001
12-17 19:31:56.613  2883  2996 I HwSystemManager: ExtraTrafficSetting:result is empty
12-17 19:31:56.613  2852  2852 D StatusBar: No peeking: unimportant notification: 0|com.android.incallui|2|null|1001
12-17 19:31:56.613  2852  2852 I NotificationGroupManager: onEntryAdded:0|com.android.incallui|2|null|1001, group=0|com.android.incallui|2|null|1001
12-17 19:31:56.613  2852  2852 I HwPhoneStatusBar: updateNotificationShade
12-17 19:31:56.613  2852  2852 I PhoneStatusBar: updateNotificationShade
12-17 19:31:56.613  2852  2852 I PhoneStatusBar: removeNotificationChildren
12-17 19:31:56.615  2852  2852 I StackScroller: generateAddAnimation:null, false
12-17 19:31:56.617  2852  2852 I StackScroller: generateAddAnimation:null, false
12-17 19:31:56.617  2852  2852 I HwNotificationIconAreaController: showNotificationAll
12-17 19:31:56.618  1795  6988 I NotificationManager: onNotificationExpansionChanged called
12-17 19:31:56.619  1795 16498 I NotificationManager: onNotificationExpansionChanged called
12-17 19:31:56.619  2852  2852 D ReporterUtil:  e id:344 type:{pkg:com.android.incallui}
12-17 19:31:56.619  3608  3608 D InCall  : InCallPresenter - notifyInCallScreenIsForeground: false
12-17 19:31:56.619  2852  2852 V KeyguardUpdateMonitor: KGSvcFp onAuthenticationAcquired.2001
12-17 19:31:56.619  3608  3608 I SendBroadcastPermission: action:InCallScreenIsForegroundActivity, mPermissionType:0
12-17 19:31:56.619  2852  2852 I vol.VolumeDialog: VolumeDialogController.Callbacks onScreenOff
12-17 19:31:56.619  2852  2852 I PowerUI : onReceive intent:act:android.intent.action.SCREEN_OFF  flag:1342177296 
