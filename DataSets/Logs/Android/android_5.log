12-17 19:31:36.841  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.841  1046 26554 V ThreadsEx: HDebug print the key screen_state
12-17 19:31:36.841  1046 26554 D audio_hw_primary: adev_set_parameters: enter: screen_state=off
12-17 19:31:36.841   606  2379 E libteec : QSEECom_send_cmd return!
12-17 19:31:36.841  1046 26554 I Huawei_audio_cust: huawei_audio huawei_choose_HandsFree_device_incall_forHWtest: test Type =4
12-17 19:31:36.841   606  2379 E libteec : qsc_send_cmd finish
12-17 19:31:36.841  1046 26554 I Huawei_audio_cust: huawei_audio huawei_choose_Handset_device_incall_forHWtest: test Type =4
12-17 19:31:36.841   606  2379 E libteec : send data return = 192
12-17 19:31:36.841   835  2385 E libteec : receive data len = 192
12-17 19:31:36.841   835  2385 E libteec : begin
12-17 19:31:36.841   835  2385 E libteec : qsc_decode end
12-17 19:31:36.841   835  2385 I fpc_tac : fpc_tac_send_set_arbitrary_data_cmd:ok, response:0
12-17 19:31:36.841  1046 26554 I Huawei_audio_cust: get_spk_pa_type: pa is max98925
12-17 19:31:36.841  1046 26554 I Huawei_audio_cust: huawei_common_set_parameters: exit with code(0)
12-17 19:31:36.841   835  2385 D fingerprintd: onAcquired(2001)
12-17 19:31:36.841  1046 26554 V Huawei_audio_cust: huawei_cust_set_parameters: exit with code(0)
12-17 19:31:36.841  1046 26554 V msm8916_platform: platform_set_parameters: enter: - screen_state=off
12-17 19:31:36.841  1046 26554 V msm8916_platform: platform_set_parameters: exit with code(0)
12-17 19:31:36.841  1046 26554 D audio_hw_extn: audio_extn_set_anc_parameters: anc_enabled:0
12-17 19:31:36.841  1046 26554 D audio_hw_spkr_prot: audio_extn_fbsp_set_parameters: Speaker protection disabled
12-17 19:31:36.841   835  2385 E libteec : begin
12-17 19:31:36.841  1046 26554 V audio_hw_primary: adev_set_parameters: exit with code(0)
12-17 19:31:36.841   606  2379 E libteec : receive data len = 128
12-17 19:31:36.841  1795 17831 W FingerprintService: onAcquired 1
12-17 19:31:36.841  1795  2326 W FingerprintService: onAcquired 2
12-17 19:31:36.841  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.843  1795  1795 I AlarmManager: set(PendingIntent{2f9e644: PendingIntentRecord{527f32d android broadcastIntent}}) : type=2 triggerAtTime=447093207 win=300000 tElapsed=447093207 maxElapsed=447393207 interval=0 flags=0x8
12-17 19:31:36.845  1795  1795 D HwPFWLogger: PFW.HwPFWService:mBroadcastReceiver action = android.intent.action.SCREEN_OFF
12-17 19:31:36.845  1795  2708 D HwPFWLogger: PFW.HwPFWService:handle PFW_MSG_SYSTEM
12-17 19:31:36.845  1795  2708 D HwPFWLogger: PFW.HwPFWAppRestartPolicy:receive action = android.intent.action.SCREEN_OFF
12-17 19:31:36.847  1795  1795 D WifiService: onReceive, action:android.intent.action.SCREEN_OFF
12-17 19:31:36.847  1795  2670 D WifiController: DeviceActiveState{ when=-1ms what=155651 target=com.android.internal.util.StateMachine$SmHandler }
12-17 19:31:36.847  1795  2670 D WifiController: StaEnabledState what=155651
12-17 19:31:36.847  1795  2670 D WifiController: DefaultState what=155651
12-17 19:31:36.847  1795  2670 D WifiController: wifiSleepPolicy:1
12-17 19:31:36.847  1795  2670 D WifiController: set idle timer: 1800000 ms
12-17 19:31:36.847  1795  2670 I AlarmManager: set(PendingIntent{50e3a01: PendingIntentRecord{a8130a6 android broadcastIntent}}) : type=0 triggerAtTime=1481976096847 win=0 tElapsed=444633210 maxElapsed=444633210 interval=0 flags=0x9
12-17 19:31:36.853  1795  2736 E hwintelligencewifi:  DefaultState MSG_SCREEN_OFF mIsAutoOpenSearch = false
12-17 19:31:36.853  1795  2377 I IO.IOStatsService: onReceive:screen off
12-17 19:31:36.854  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.855  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.856  1795  2377 I IO.IOStatsService: saveIOStatsAndLatestUids,the time interval is too shorter than the last screen off
12-17 19:31:36.857  2883  2883 D HwKeyguardManagerImpl: isLockScreenDisabled HwKeyguardManagerImpl result = false
12-17 19:31:36.858  1795  3238 D PowerManagerService: acquire lock=184063844, flags=0x1, tag="NetworkStats", name=android, ws=null, uid=1000, pid=1795
12-17 19:31:36.858  1795  3238 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:31:36.860   606  2379 E libteec : QSEECom_send_cmd return!
12-17 19:31:36.860   606  2379 E libteec : qsc_send_cmd finish
12-17 19:31:36.860   606  2379 E libteec : send data return = 128
12-17 19:31:36.861   835  2385 E libteec : receive data len = 128
12-17 19:31:36.861   835  2385 E libteec : begin
12-17 19:31:36.861   835  2385 E libteec : qsc_decode end
12-17 19:31:36.861  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.861  1795  3238 D NetdConnector: SND -> {11591 bandwidth gettetherstats}
12-17 19:31:36.861  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.862  1795  2665 D NetdConnector: RCV <- {200 11591 Tethering stats list completed}
12-17 19:31:36.863  2883  2883 I HwSystemManager: AntiMalManager:receive Broadcast ACTION_SCREEN_OFF mOnTimeSum:260909299 onTime:535958 isPowerConnected:false
12-17 19:31:36.863  1795  2665 D NetdConnector: RCV <- {200 11591 Tethering stats list completed}
12-17 19:31:36.864  2883  2883 I HwSystemManager: AutoCleanReceiveServer:receive action:android.intent.action.SCREEN_OFF
12-17 19:31:36.864  5215  5215 D wpa_supplicant: wpa_driver_nl80211_driver_cmd SETSUSPENDMODE 1 len = 0, 4096
12-17 19:31:36.864  5215  5215 D wpa_supplicant: CTRL-DEBUG: global_ctrl_sock-sendto: sock=16 sndbuf=229376 outq=0 send_len=3
12-17 19:31:36.865  1795  2671 D PowerManagerService: release:lock=244575063, flg=0x0, tag="WifiSuspend", name=android", ws=null, uid=1000, pid=1795
12-17 19:31:36.865  2883  2883 I HwSystemManager: AutoCleanReceiveServer:telemamanger state isIdle:true
12-17 19:31:36.865  2883  2883 I HwSystemManager: AutoCleanReceiveServer:checkToStartCleanService,phone is use state,phone is use,need not start clean service
12-17 19:31:36.865  1795  2671 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:31:36.867  1795  3238 W NetworkStatsFactory: mStatsXtProcUid: /proc/net/comm/stats does not exist!
12-17 19:31:36.867  1795  3238 D HwNetworkStatsService: mActiveIface: null
12-17 19:31:36.869  1795  3238 I SendBroadcastPermission: action:com.android.server.action.NETWORK_STATS_UPDATED, mPermissionType:0
12-17 19:31:36.870  1795  3238 I HwActivityManagerService: Split enqueueing broadcast [callerApp]:ProcessRecord{34bf34f 0:system/1000}
12-17 19:31:36.870  1795  3238 D PowerManagerService: release:lock=184063844, flg=0x0, tag="NetworkStats", name=android", ws=null, uid=1000, pid=1795
12-17 19:31:36.870  1795  3238 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:31:36.870  1795  3238 D PowerManagerService: Releasing suspend blocker "PowerManagerService.WakeLocks".
12-17 19:31:36.871  1795  3077 D GnssLocationProvider: receive broadcast intent, action: android.intent.action.SCREEN_OFF
12-17 19:31:36.871  1795  3077 I GnssLocationProvider: updateLowPowerMode,isPowerSaveMode:falseisInteractive:false
12-17 19:31:36.871  1795  3077 I GnssLocationProvider: disableGps:false  isEnabled()=true
12-17 19:31:36.872  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.873  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.874  2852  3361 I vol.VolumeDialogControl: C onScreenOff 
12-17 19:31:36.877  3168  3168 I CHR_TelStatusListenr0: [Timer rat:0 level:5] suspend
12-17 19:31:36.877  3168  3168 I CHR_TelStatusListenr0: [Timer serviceState:0 simReady:true] suspend
12-17 19:31:36.877  3168  3168 I CHR_TelStatusListenr1: [Timer serviceState:1 simReady:false] suspend
12-17 19:31:36.877  3168  3168 I CHR_TelphonyStatusService: duration: 495877 STATUS_REPORT_TIMESPAN: 86400000 / (1000 * 60 * 60 * 24) day STATUS_REPORT_TIMESPAN_FOR_BETA: 21600000 / (1000 * 60 * 60 * 24) day
12-17 19:31:36.877  3168  3168 I CHR_ChrUtil: is Beta User, userType = 3
12-17 19:31:36.880  2883  3040 I HwSystemManager: TrafficNotifyAfterLocked:mLockStartTraffic = 0;mLockStartTrafficList = {}
12-17 19:31:36.883  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:31:36.883  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:31:36.883  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:31:36.883  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:31:36.888  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.888  2883  2996 E HwSystemManager: SimCardMethod:/getSimCardInfo: imsi is null
12-17 19:31:36.889  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.898  2883  2996 I HwSystemManager: NormalTrafficAnalysis:alert byte = 0 last alert byte = 0
12-17 19:31:36.898  2883  2996 E HwSystemManager: NormalTrafficAnalysis:alert byte = 0, so return
12-17 19:31:36.905  3218  6115 E HW-JPEG-DEC: [HME_JPEG_DEC_Delete](3298): HME_JPEG_DEC_Delete: decoder_ctx=null
12-17 19:31:36.911  2883  2996 I HwSystemManager: TafficState:default sub id = 0slotIndex = 0 subscriptionId = 0
12-17 19:31:36.915  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.916  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.917  2883  2996 E HwSystemManager: LeisureTrafficSetting:result is empty
12-17 19:31:36.922  2883  2996 I HwSystemManager: NatTrafficNotifyService:delta byte = 0 no traffic delta = 0Traffic state is 301
12-17 19:31:36.924  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:31:36.925  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
