12-17 19:32:30.752  5215  5215 D wpa_supplicant: wpa_driver_nl80211_driver_cmd SETSUSPENDMODE 1 len = 0, 4096
12-17 19:32:30.752  5215  5215 D wpa_supplicant: CTRL-DEBUG: global_ctrl_sock-sendto: sock=16 sndbuf=229376 outq=0 send_len=3
12-17 19:32:30.753  1795  2671 D PowerManagerService: release:lock=244575063, flg=0x0, tag="WifiSuspend", name=android", ws=null, uid=1000, pid=1795
12-17 19:32:30.753  1795  2671 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:32:30.753  1795  2671 D PowerManagerService: Releasing suspend blocker "PowerManagerService.WakeLocks".
12-17 19:32:30.753  1795  1795 D WifiService: onReceive, action:android.intent.action.SCREEN_OFF
12-17 19:32:30.753  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.753  1795  2670 D WifiController: DeviceActiveState{ when=0 what=155651 target=com.android.internal.util.StateMachine$SmHandler }
12-17 19:32:30.754  1795  2670 D WifiController: StaEnabledState what=155651
12-17 19:32:30.754  1795  2670 D WifiController: DefaultState what=155651
12-17 19:32:30.754  1795  2670 D WifiController: wifiSleepPolicy:1
12-17 19:32:30.754  1795  2670 D WifiController: set idle timer: 1800000 ms
12-17 19:32:30.754  1795  2670 I AlarmManager: set(PendingIntent{50e3a01: PendingIntentRecord{a8130a6 android broadcastIntent}}) : type=0 triggerAtTime=1481976150754 win=0 tElapsed=444687117 maxElapsed=444687117 interval=0 flags=0x9
12-17 19:32:30.754  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.759  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.759  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.761  1795  2377 I IO.IOStatsService: onReceive:screen off
12-17 19:32:30.761  1795  2736 E hwintelligencewifi:  DefaultState MSG_SCREEN_OFF mIsAutoOpenSearch = false
12-17 19:32:30.766  1795  2377 I IO.IOStatsService: saveIOStatsAndLatestUids,the time interval is too shorter than the last screen off
12-17 19:32:30.767  2883  2883 D HwKeyguardManagerImpl: isLockScreenDisabled HwKeyguardManagerImpl result = false
12-17 19:32:30.767  3180  3180 E libc    : Access denied finding property "persist.sys.smart_power"
12-17 19:32:30.767  1795  3238 D PowerManagerService: acquire lock=184063844, flags=0x1, tag="NetworkStats", name=android, ws=null, uid=1000, pid=1795
12-17 19:32:30.767  1795  3238 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:32:30.767  3180  3180 E libc    : Access denied finding property "persist.sys.smart_power"
12-17 19:32:30.767  1795  3238 D PowerManagerService: Acquiring suspend blocker "PowerManagerService.WakeLocks".
12-17 19:32:30.767  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.768  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.770  1795  3238 D NetdConnector: SND -> {11619 bandwidth gettetherstats}
12-17 19:32:30.771  1795  2665 D NetdConnector: RCV <- {200 11619 Tethering stats list completed}
12-17 19:32:30.772  1795  2665 D NetdConnector: RCV <- {200 11619 Tethering stats list completed}
12-17 19:32:30.773  2883  2883 I HwSystemManager: AntiMalManager:receive Broadcast ACTION_SCREEN_OFF mOnTimeSum:260909299 onTime:551784 isPowerConnected:false
12-17 19:32:30.774  2883  2883 I HwSystemManager: AutoCleanReceiveServer:receive action:android.intent.action.SCREEN_OFF
12-17 19:32:30.775  1795  3238 W NetworkStatsFactory: mStatsXtProcUid: /proc/net/comm/stats does not exist!
12-17 19:32:30.775  1795  3238 D HwNetworkStatsService: mActiveIface: null
12-17 19:32:30.776  2883  2883 I HwSystemManager: AutoCleanReceiveServer:telemamanger state isIdle:true
12-17 19:32:30.776  2883  2883 I HwSystemManager: AutoCleanReceiveServer:checkToStartCleanService,phone is use state,phone is use,need not start clean service
12-17 19:32:30.777  1795  3238 I SendBroadcastPermission: action:com.android.server.action.NETWORK_STATS_UPDATED, mPermissionType:0
12-17 19:32:30.779  1795  3238 I HwActivityManagerService: Split enqueueing broadcast [callerApp]:ProcessRecord{34bf34f 0:system/1000}
12-17 19:32:30.779  1795  3238 D PowerManagerService: release:lock=184063844, flg=0x0, tag="NetworkStats", name=android", ws=null, uid=1000, pid=1795
12-17 19:32:30.779  1795  3238 D PowerManagerService: ready=true,policy=0,wakefulness=0,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=33,auto=-1,adj=0.0userId=0
12-17 19:32:30.779  1795  3238 D PowerManagerService: Releasing suspend blocker "PowerManagerService.WakeLocks".
12-17 19:32:30.782  1795  3077 D GnssLocationProvider: receive broadcast intent, action: android.intent.action.SCREEN_OFF
12-17 19:32:30.782  1795  3077 I GnssLocationProvider: updateLowPowerMode,isPowerSaveMode:falseisInteractive:false
12-17 19:32:30.782  1795  3077 I GnssLocationProvider: disableGps:false  isEnabled()=true
12-17 19:32:30.785  2852  3361 I vol.VolumeDialogControl: C onScreenOff 
12-17 19:32:30.785  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.786  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.787  3168  3168 I CHR_TelStatusListenr0: [Timer rat:0 level:5] suspend
12-17 19:32:30.787  3168  3168 I CHR_TelStatusListenr0: [Timer serviceState:0 simReady:true] suspend
12-17 19:32:30.788  3168  3168 I CHR_TelStatusListenr1: [Timer serviceState:1 simReady:false] suspend
12-17 19:32:30.788  3168  3168 I CHR_TelphonyStatusService: duration: 549788 STATUS_REPORT_TIMESPAN: 86400000 / (1000 * 60 * 60 * 24) day STATUS_REPORT_TIMESPAN_FOR_BETA: 21600000 / (1000 * 60 * 60 * 24) day
12-17 19:32:30.788  3168  3168 I CHR_ChrUtil: is Beta User, userType = 3
12-17 19:32:30.791  2883  3040 I HwSystemManager: TrafficNotifyAfterLocked:mLockStartTraffic = 0;mLockStartTrafficList = {}
12-17 19:32:30.792  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:32:30.792  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:32:30.793  2852  3556 I NetworkController.MobileSignalController(0): onDataActivity: direction=0
12-17 19:32:30.793  2852  3556 I SystemUIIdleHandler: enter addToIdleMessage(type:1001), mainloop is busy, add to idleMessage
12-17 19:32:30.798  2883  2996 E HwSystemManager: SimCardMethod:/getSimCardInfo: imsi is null
12-17 19:32:30.803  2852  2865 I art     : Background partial concurrent mark sweep GC freed 21259(1487KB) AllocSpace objects, 4(208KB) LOS objects, 12% free, 55MB/63MB, paused 1.395ms total 102.747ms
12-17 19:32:30.809  2883  2996 I HwSystemManager: NormalTrafficAnalysis:alert byte = 0 last alert byte = 0
12-17 19:32:30.809  2883  2996 E HwSystemManager: NormalTrafficAnalysis:alert byte = 0, so return
12-17 19:32:30.810  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.811  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.817  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.817  3218 13114 E HW-JPEG-DEC: [HME_JPEG_DEC_Delete](3298): HME_JPEG_DEC_Delete: decoder_ctx=null
12-17 19:32:30.818  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.824  2883  2996 I HwSystemManager: TafficState:default sub id = 0slotIndex = 0 subscriptionId = 0
12-17 19:32:30.830  2883  2996 E HwSystemManager: LeisureTrafficSetting:result is empty
12-17 19:32:30.832  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.833  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.833  2883  2996 I HwSystemManager: NatTrafficNotifyService:delta byte = 0 no traffic delta = 0Traffic state is 301
12-17 19:32:30.841  2883  2996 I HwSystemManager: ExtraTrafficSetting:result is empty
12-17 19:32:30.843  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.843  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.848  3608  3608 D InCall  : InCallPresenter - notifyInCallScreenIsForeground: false
12-17 19:32:30.848  3608  3608 I SendBroadcastPermission: action:InCallScreenIsForegroundActivity, mPermissionType:0
12-17 19:32:30.848  1795 16500 I HwActivityManagerService: Split enqueueing broadcast [callerApp]:ProcessRecord{ec55919 3608:com.android.incallui/1001}
12-17 19:32:30.849  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.850  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.854  1795  1809 I HwPhoneWindowManager: OverscanTimeout run
12-17 19:32:30.856  2883  2996 I HwSystemManager: ITrafficInfo:ITrafficInfo create 301updateBytes = 1769320345
12-17 19:32:30.858  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.859  2852  2852 W HwPhoneLayoutInflater: onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
12-17 19:32:30.862  2852  2852 I HwExpandableNotificationRowHelper: unclear notification ,notificationPkgName:com.android.incallui key:0|com.android.incallui|2|null|1001
12-17 19:32:30.863  2852  2852 D StatusBar: No peeking: unimportant notification: 0|com.android.incallui|2|null|1001
12-17 19:32:30.863  2852  2852 I NotificationGroupManager: onEntryAdded:0|com.android.incallui|2|null|1001, group=0|com.android.incallui|2|null|1001
12-17 19:32:30.863  2852  2852 I HwPhoneStatusBar: updateNotificationShade
12-17 19:32:30.863  2852  2852 I PhoneStatusBar: updateNotificationShade
12-17 19:32:30.863  2852  2852 I PhoneStatusBar: removeNotificationChildren
12-17 19:32:30.865  2852  2852 I StackScroller: generateAddAnimation:null, false
12-17 19:32:30.866  2852  2852 I StackScroller: generateAddAnimation:null, false
12-17 19:32:30.866  1795 20747 I NotificationManager: onNotificationExpansionChanged called
12-17 19:32:30.866  2852  2852 I HwNotificationIconAreaController: showNotificationAll
12-17 19:32:30.867  1795  3139 I NotificationManager: onNotificationExpansionChanged called
12-17 19:32:30.868  2852  2852 D ReporterUtil:  e id:344 type:{pkg:com.android.incallui}
12-17 19:32:30.868  2852  2852 V KeyguardUpdateMonitor: KGSvcFp onAuthenticationAcquired.2001
12-17 19:32:30.868  2852  2852 I vol.VolumeDialog: VolumeDialogController.Callbacks onScreenOff
12-17 19:32:30.868  2852  2852 I PowerUI : onReceive intent:act:android.intent.action.SCREEN_OFF  flag:1342177296 
12-17 19:32:30.870  2852  2852 I BackgrounCallingLayout: simCount:2 phoneState:2
12-17 19:32:30.870  2852  2852 I BackgrounCallingLayout: mCallingStatusReceiver:onReceive::action=InCallScreenIsForegroundActivity, isForegroundActivity=false, mPhoneState=2
